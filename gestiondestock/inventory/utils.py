# inventory/utils.py

from twilio.rest import Client  # Si tu utilises Twilio pour l'envoi de SMS


def envoyer_sms(numero_telephone):
    # Exemple d'envoi de SMS avec Twilio
    client = Client('TWILIO_ACCOUNT_SID', 'TWILIO_AUTH_TOKEN')

    message = client.messages.create(
        body="Voici votre code de confirmation",
        from_='+1XXXXXXXXXX',  # Ton num√©ro Twilio
        to=numero_telephone
    )

    return message.sid  # Retourne l'ID du message envoy√©


def analyze_articles(articles, low_threshold=5):
    """
    Pour chaque article, calcule un statut en fonction de sa quantit√© :
      - 'Rupture' si quantit√© <= 0
      - 'Stock faible' si quantit√© <= low_threshold
      - 'OK' sinon
    Retourne une liste de dicts contenant nom, reference, quantite et statut.
    """
    report = []
    for art in articles:
        q = getattr(art, 'quantite', 0)
        if q <= 0:
            statut = 'Rupture'
        elif q <= low_threshold:
            statut = 'Stock faible'
        else:
            statut = 'OK'
        report.append({
            'nom': art.nom,
            'reference': art.reference,
            'quantite': q,
            'statut': statut,
        })
    return report


def generate_report(stats, low_stock_items=None):
    """
    G√©n√®re un rapport plus complet :
    - Titre avec emoji
    - Synth√®se chiffres-cl√©s
    - Liste des articles critiques (rupture ou stock faible)
    - Mini-analyse de tendance
    - Recommandations d√©taill√©es
    """
    lines = []
    # 1. Titre
    lines.append(f"üóìÔ∏è **Rapport Stock ‚Äì {stats['date']}**\n")

    # 2. Synth√®se
    lines.append("üî¢ **Chiffres cl√©s :**")
    lines.append(f" ‚Ä¢ Total d‚Äôarticles     : {stats['totalArticles']}")
    lines.append(f" ‚Ä¢ Stock disponible     : {stats['stockDisponible']}")
    lines.append(f" ‚Ä¢ Articles en rupture  : {stats['ruptures']}")
    lines.append(f" ‚Ä¢ Commandes en attente : {stats['cmdEnAttente']}\n")

    # 3. Articles critiques
    if low_stock_items:
        lines.append("‚ö†Ô∏è **Articles critiques :**")
        for item in low_stock_items:
            lines.append(f"   - {item['nom']} (quantit√© {item['quantite']}) ‚Üí {item['statut']}")
        lines.append("")  # ligne vide

    # 4. Mini-tendance
    if stats.get('last_week_stock') is not None:
        delta = stats['stockDisponible'] - stats['last_week_stock']
        trend = "‚ÜóÔ∏è augmentation" if delta > 0 else "‚ÜòÔ∏è diminution" if delta < 0 else "‚è∏Ô∏è stable"
        lines.append(f"üìà Tendance hebdo : {trend} de {abs(delta)} unit√©s\n")

    # 5. Recommandations
    lines.append("üí° **Recommandations :**")
    if stats['ruptures'] > 0:
        lines.append(" ‚Ä¢ Relancer imm√©diatement les fournisseurs pour les ruptures.")
    elif low_stock_items:
        lines.append(" ‚Ä¢ Surveiller les articles en stock faible list√©s ci-dessus.")
    else:
        lines.append(" ‚Ä¢ Bon niveau de stock global ! Continuez ainsi.")

    return "\n".join(lines)

